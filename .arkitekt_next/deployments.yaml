deployments:
- build_id: 6f492714-e9ff-466e-8361-9a28f5ebb3b8
  deployed_at: '2024-07-17T17:08:24.212055'
  deployment_id: b23508b2-4fb6-4365-9798-8b57568f2b14
  deployment_run: 7a139c4d-5ad0-4cc5-8d78-21c506edf9c0
  flavour: vanilla
  image: jhnnsrs/deployer:0.0.1-vanilla
  inspection:
    requirements:
      datalayer:
        description: An instance of ArkitektNext Datalayer to make requests to the
          user's data
        optional: true
        service: live.arkitekt.datalayer
      fluss:
        description: An instance of ArkitektNext fluss to retrieve graphs from
        optional: false
        service: live.arkitekt.fluss
      kabinet:
        description: An instance of ArkitektNext Kabinet to retrieve nodes from
        optional: false
        service: live.arkitekt.kabinet
      lok:
        description: An instance of ArkitektNext Lok to authenticate the user
        optional: false
        service: live.arkitekt.lok
      mikro:
        description: An instance of ArkitektNext Mikro to make requests to the user's
          data
        optional: true
        service: live.arkitekt.mikro
      rekuest:
        description: An instance of ArkitektNext Rekuest to assign to nodes
        optional: false
        service: live.arkitekt.rekuest
      unlok:
        description: An instance of ArkitektNext Lok to authenticate the user
        optional: false
        service: live.arkitekt.lok
    size: 515449119
    templates:
    - definition:
        args:
        - identifier: '@kabinet/release'
          key: release
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Deploy
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: deploy
    - definition:
        args:
        - identifier: '@kabinet/deployment'
          key: deployment
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Runner
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: run
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Restarts a pod by stopping and starting it again.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Restart
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: restart
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Move
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: move
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Stops a pod by stopping and does not start it again.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Stop
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: stop
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Remove a pod by stopping and removing it.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Remove
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: remove
    - definition:
        args:
        - key: number
          kind: INT
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: GENERATOR
        name: Yielder
        portGroups: []
        returns:
        - key: return0
          kind: INT
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: yielder
    - definition:
        args:
        - key: number
          kind: INT
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Installer
        portGroups: []
        returns:
        - key: return0
          kind: INT
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: installer
  manifest:
    author: jhnnsrs
    created_at: '2024-07-17T17:07:33.766745'
    entrypoint: app
    identifier: deployer
    scopes:
    - read
    version: 0.0.1
  selectors: []
- build_id: 6e4c91ac-3173-4daf-92ab-0372f17eb940
  deployed_at: '2024-07-22T14:00:25.510859'
  deployment_id: 0442f84d-c514-4ddf-b87a-aac936846ad9
  deployment_run: 22ca92d2-1fb6-4661-83d0-f673820df74d
  flavour: vanilla
  image: jhnnsrs/deployer:0.0.2-vanilla
  inspection:
    requirements:
      datalayer:
        description: An instance of ArkitektNext Datalayer to make requests to the
          user's data
        optional: true
        service: live.arkitekt.s3
      fluss:
        description: An instance of ArkitektNext fluss to retrieve graphs from
        optional: false
        service: live.arkitekt.fluss
      kabinet:
        description: An instance of ArkitektNext Kabinet to retrieve nodes from
        optional: false
        service: live.arkitekt.kabinet
      lok:
        description: An instance of ArkitektNext Lok to authenticate the user
        optional: false
        service: live.arkitekt.lok
      mikro:
        description: An instance of ArkitektNext Mikro to make requests to the user's
          data
        optional: true
        service: live.arkitekt.mikro
      rekuest:
        description: An instance of ArkitektNext Rekuest to assign to nodes
        optional: false
        service: live.arkitekt.rekuest
      unlok:
        description: An instance of ArkitektNext Lok to authenticate the user
        optional: false
        service: live.arkitekt.lok
    size: 516708018
    templates:
    - definition:
        args:
        - identifier: '@kabinet/release'
          key: release
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Deploy
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: deploy
    - definition:
        args:
        - identifier: '@kabinet/deployment'
          key: deployment
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Runner
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: run
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Restarts a pod by stopping and starting it again.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Restart
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: restart
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Move
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: move
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Stops a pod by stopping and does not start it again.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Stop
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: stop
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Remove a pod by stopping and removing it.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Remove
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: remove
    - definition:
        args:
        - key: number
          kind: INT
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: GENERATOR
        name: Yielder
        portGroups: []
        returns:
        - key: return0
          kind: INT
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: yielder
    - definition:
        args:
        - key: number
          kind: INT
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Installer
        portGroups: []
        returns:
        - key: return0
          kind: INT
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: installer
  manifest:
    author: jhnnsrs
    created_at: '2024-07-22T13:59:51.862947'
    entrypoint: app
    identifier: deployer
    scopes:
    - read
    version: 0.0.2
  selectors: []
- build_id: b3e39447-42e0-4d15-b5ec-a0e2f075b619
  deployed_at: '2024-07-22T14:10:12.904579'
  deployment_id: 19867c01-d666-46cf-ac20-6753eeecc748
  deployment_run: 280a4df5-724c-47e2-b75c-98af59f4111d
  flavour: vanilla
  image: jhnnsrs/deployer:0.0.3-vanilla
  inspection:
    requirements:
      datalayer:
        description: An instance of ArkitektNext Datalayer to make requests to the
          user's data
        optional: true
        service: live.arkitekt.s3
      fluss:
        description: An instance of ArkitektNext fluss to retrieve graphs from
        optional: false
        service: live.arkitekt.fluss
      kabinet:
        description: An instance of ArkitektNext Kabinet to retrieve nodes from
        optional: false
        service: live.arkitekt.kabinet
      lok:
        description: An instance of ArkitektNext Lok to authenticate the user
        optional: false
        service: live.arkitekt.lok
      mikro:
        description: An instance of ArkitektNext Mikro to make requests to the user's
          data
        optional: true
        service: live.arkitekt.mikro
      rekuest:
        description: An instance of ArkitektNext Rekuest to assign to nodes
        optional: false
        service: live.arkitekt.rekuest
      unlok:
        description: An instance of ArkitektNext Lok to authenticate the user
        optional: false
        service: live.arkitekt.lok
    size: 516720487
    templates:
    - definition:
        args:
        - identifier: '@kabinet/release'
          key: release
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Deploy
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: deploy
    - definition:
        args:
        - identifier: '@kabinet/deployment'
          key: deployment
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Runner
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: run
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Restarts a pod by stopping and starting it again.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Restart
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: restart
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Move
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: move
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Stops a pod by stopping and does not start it again.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Stop
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: stop
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Remove a pod by stopping and removing it.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Remove
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: remove
    - definition:
        args:
        - key: number
          kind: INT
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: GENERATOR
        name: Yielder
        portGroups: []
        returns:
        - key: return0
          kind: INT
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: yielder
    - definition:
        args:
        - key: number
          kind: INT
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Installer
        portGroups: []
        returns:
        - key: return0
          kind: INT
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: installer
  manifest:
    author: jhnnsrs
    created_at: '2024-07-22T14:10:04.522560'
    entrypoint: app
    identifier: deployer
    scopes:
    - read
    version: 0.0.3
  selectors: []
- build_id: 2df4eddf-956a-45d1-836e-acfdf6ed8028
  deployed_at: '2024-07-22T14:18:31.981600'
  deployment_id: 8ae10fee-9670-4637-88d7-7a56aa2a5aff
  deployment_run: edc9fa74-4430-45e8-a8ef-c46b4a25f79c
  flavour: vanilla
  image: jhnnsrs/deployer:0.0.5-vanilla
  inspection:
    requirements:
      datalayer:
        description: An instance of ArkitektNext Datalayer to make requests to the
          user's data
        optional: true
        service: live.arkitekt.s3
      fluss:
        description: An instance of ArkitektNext fluss to retrieve graphs from
        optional: false
        service: live.arkitekt.fluss
      kabinet:
        description: An instance of ArkitektNext Kabinet to retrieve nodes from
        optional: false
        service: live.arkitekt.kabinet
      lok:
        description: An instance of ArkitektNext Lok to authenticate the user
        optional: false
        service: live.arkitekt.lok
      mikro:
        description: An instance of ArkitektNext Mikro to make requests to the user's
          data
        optional: true
        service: live.arkitekt.mikro
      rekuest:
        description: An instance of ArkitektNext Rekuest to assign to nodes
        optional: false
        service: live.arkitekt.rekuest
      unlok:
        description: An instance of ArkitektNext Lok to authenticate the user
        optional: false
        service: live.arkitekt.lok
    size: 516763031
    templates:
    - definition:
        args:
        - identifier: '@kabinet/release'
          key: release
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Deploy
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: deploy
    - definition:
        args:
        - identifier: '@kabinet/deployment'
          key: deployment
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Runner
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: run
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Restarts a pod by stopping and starting it again.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Restart
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: restart
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Move
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: move
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Stops a pod by stopping and does not start it again.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Stop
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: stop
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Remove a pod by stopping and removing it.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Remove
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: remove
    - definition:
        args:
        - key: number
          kind: INT
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: GENERATOR
        name: Yielder
        portGroups: []
        returns:
        - key: return0
          kind: INT
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: yielder
    - definition:
        args:
        - key: number
          kind: INT
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Installer
        portGroups: []
        returns:
        - key: return0
          kind: INT
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: installer
  manifest:
    author: jhnnsrs
    created_at: '2024-07-22T14:18:23.598472'
    entrypoint: app
    identifier: deployer
    scopes:
    - read
    version: 0.0.5
  selectors: []
- build_id: bf481487-6392-4f23-95c9-6dbda9cb81df
  deployed_at: '2024-07-22T14:24:43.742039'
  deployment_id: ae85b6a9-b2cd-48a8-aa35-a3823ba37939
  deployment_run: b73b1806-4b8b-4aec-991f-8af8ed3baf2e
  flavour: vanilla
  image: jhnnsrs/deployer:0.0.6-vanilla
  inspection:
    requirements:
      datalayer:
        description: An instance of ArkitektNext Datalayer to make requests to the
          user's data
        optional: true
        service: live.arkitekt.s3
      fluss:
        description: An instance of ArkitektNext fluss to retrieve graphs from
        optional: false
        service: live.arkitekt.fluss
      kabinet:
        description: An instance of ArkitektNext Kabinet to retrieve nodes from
        optional: false
        service: live.arkitekt.kabinet
      lok:
        description: An instance of ArkitektNext Lok to authenticate the user
        optional: false
        service: live.arkitekt.lok
      mikro:
        description: An instance of ArkitektNext Mikro to make requests to the user's
          data
        optional: true
        service: live.arkitekt.mikro
      rekuest:
        description: An instance of ArkitektNext Rekuest to assign to nodes
        optional: false
        service: live.arkitekt.rekuest
      unlok:
        description: An instance of ArkitektNext Lok to authenticate the user
        optional: false
        service: live.arkitekt.lok
    size: 516781436
    templates:
    - definition:
        args:
        - identifier: '@kabinet/release'
          key: release
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Deploy
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: deploy
    - definition:
        args:
        - identifier: '@kabinet/deployment'
          key: deployment
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Runner
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: run
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Restarts a pod by stopping and starting it again.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Restart
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: restart
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Move
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: move
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Stops a pod by stopping and does not start it again.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Stop
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: stop
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Remove a pod by stopping and removing it.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Remove
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: remove
    - definition:
        args:
        - key: number
          kind: INT
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: GENERATOR
        name: Yielder
        portGroups: []
        returns:
        - key: return0
          kind: INT
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: yielder
    - definition:
        args:
        - key: number
          kind: INT
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Installer
        portGroups: []
        returns:
        - key: return0
          kind: INT
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: installer
  manifest:
    author: jhnnsrs
    created_at: '2024-07-22T14:24:29.796986'
    entrypoint: app
    identifier: deployer
    scopes:
    - read
    version: 0.0.6
  selectors: []
- build_id: 1ff02131-7f16-4c9a-9cbe-21df776387a8
  deployed_at: '2024-07-22T14:43:15.050413'
  deployment_id: b48df004-b5fd-4dce-a23a-bd42256d01af
  deployment_run: bb942008-fefa-42e0-b708-3f9aef3d71a1
  flavour: vanilla
  image: jhnnsrs/deployer:0.0.7-vanilla
  inspection:
    requirements:
      datalayer:
        description: An instance of ArkitektNext Datalayer to make requests to the
          user's data
        optional: true
        service: live.arkitekt.s3
      fluss:
        description: An instance of ArkitektNext fluss to retrieve graphs from
        optional: false
        service: live.arkitekt.fluss
      kabinet:
        description: An instance of ArkitektNext Kabinet to retrieve nodes from
        optional: false
        service: live.arkitekt.kabinet
      lok:
        description: An instance of ArkitektNext Lok to authenticate the user
        optional: false
        service: live.arkitekt.lok
      mikro:
        description: An instance of ArkitektNext Mikro to make requests to the user's
          data
        optional: true
        service: live.arkitekt.mikro
      rekuest:
        description: An instance of ArkitektNext Rekuest to assign to nodes
        optional: false
        service: live.arkitekt.rekuest
      unlok:
        description: An instance of ArkitektNext Lok to authenticate the user
        optional: false
        service: live.arkitekt.lok
    size: 516793793
    templates:
    - definition:
        args:
        - identifier: '@kabinet/release'
          key: release
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Deploy
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: deploy
    - definition:
        args:
        - identifier: '@kabinet/deployment'
          key: deployment
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Runner
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: run
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Restarts a pod by stopping and starting it again.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Restart
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: restart
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Move
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: move
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Stops a pod by stopping and does not start it again.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Stop
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: stop
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Remove a pod by stopping and removing it.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Remove
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: remove
    - definition:
        args:
        - key: number
          kind: INT
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: GENERATOR
        name: Yielder
        portGroups: []
        returns:
        - key: return0
          kind: INT
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: yielder
    - definition:
        args:
        - key: number
          kind: INT
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Installer
        portGroups: []
        returns:
        - key: return0
          kind: INT
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: installer
  manifest:
    author: jhnnsrs
    created_at: '2024-07-22T14:43:06.840662'
    entrypoint: app
    identifier: deployer
    scopes:
    - read
    version: 0.0.7
  selectors: []
- build_id: a7307cf9-5d31-47ef-8ec6-5678471b58bd
  deployed_at: '2024-07-22T15:20:12.036450'
  deployment_id: 96ee98fd-8daa-4025-830e-300dd0880d6a
  deployment_run: 64b6ab5e-587f-4b30-828b-2e54ae84c7e0
  flavour: vanilla
  image: jhnnsrs/deployer:0.0.8-vanilla
  inspection:
    requirements:
      datalayer:
        description: An instance of ArkitektNext Datalayer to make requests to the
          user's data
        optional: true
        service: live.arkitekt.s3
      fluss:
        description: An instance of ArkitektNext fluss to retrieve graphs from
        optional: false
        service: live.arkitekt.fluss
      kabinet:
        description: An instance of ArkitektNext Kabinet to retrieve nodes from
        optional: false
        service: live.arkitekt.kabinet
      lok:
        description: An instance of ArkitektNext Lok to authenticate the user
        optional: false
        service: live.arkitekt.lok
      mikro:
        description: An instance of ArkitektNext Mikro to make requests to the user's
          data
        optional: true
        service: live.arkitekt.mikro
      rekuest:
        description: An instance of ArkitektNext Rekuest to assign to nodes
        optional: false
        service: live.arkitekt.rekuest
      unlok:
        description: An instance of ArkitektNext Lok to authenticate the user
        optional: false
        service: live.arkitekt.lok
    size: 516807894
    templates:
    - definition:
        args:
        - identifier: '@kabinet/release'
          key: release
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Deploy
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: deploy
    - definition:
        args:
        - identifier: '@kabinet/deployment'
          key: deployment
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Runner
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: run
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Restarts a pod by stopping and starting it again.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Restart
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: restart
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Move
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: move
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Stops a pod by stopping and does not start it again.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Stop
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: stop
    - definition:
        args:
        - identifier: '@kabinet/pod'
          key: pod
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
        collections: []
        description: Remove a pod by stopping and removing it.
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Remove
        portGroups: []
        returns:
        - identifier: '@kabinet/pod'
          key: return0
          kind: STRUCTURE
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: remove
    - definition:
        args:
        - key: number
          kind: INT
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: GENERATOR
        name: Yielder
        portGroups: []
        returns:
        - key: return0
          kind: INT
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: yielder
    - definition:
        args:
        - key: number
          kind: INT
          nullable: false
          scope: GLOBAL
        collections: []
        description: No Description
        interfaces: []
        isDev: false
        isTestFor: []
        kind: FUNCTION
        name: Installer
        portGroups: []
        returns:
        - key: return0
          kind: INT
          nullable: false
          scope: GLOBAL
      dependencies: []
      dynamic: false
      interface: installer
  manifest:
    author: jhnnsrs
    created_at: '2024-07-22T15:19:47.545333'
    entrypoint: app
    identifier: deployer
    scopes:
    - read
    version: 0.0.8
  selectors: []
latest_deployment_run: c3f9142a-fdef-4eaa-9f1a-8e1fdb11a7a5
